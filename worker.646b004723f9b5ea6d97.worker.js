!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=2)}([function(t,e){t.exports=function(){return!1}},function(t,e){t.exports=function(){return!0}},function(t,e,n){"use strict";function r(t,e){if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}n.r(e);var o=function(t,e){var n;void 0===e&&(e=r);var o,u=[],i=!1;return function(){for(var r=[],s=0;s<arguments.length;s++)r[s]=arguments[s];return i&&n===this&&e(r,u)||(o=t.apply(this,r),i=!0,n=this,u=r),o}};function u(t,[e,n],r,o){const i=r.findIndex(t=>1===t.length);if(!o(t,r,i))return!1;const s=[...r],a=s[i][0];s[i]=[a,t];return i+1===s.length||function([t,e],n,r){const o=n.findIndex(t=>!t.length),[i,...s]=e,a=[...n];return a[o]=[i],t.some(e=>u(e,[t,s],a,r))}([e.filter(e=>e!==t),n],s,o)}var i=n(0),s=n(1);const a=[{countries:["Russia","Ukraine"],predicate:(c=2014,f=Number.MAX_SAFE_INTEGER,t=>t>=c&&t<=f)},{countries:["Azerbaijan","Armenia"]},{countries:["Serbia","Kosovo"]},{countries:["Bosnia & Herzegovina","Kosovo"]},{countries:["Spain","Gibraltar"]}];var c,f;const l={predicate:s};var d=a.map(t=>({...l,...t})),p=t=>{const e=(t=>{const e=new Map;for(const{countries:n,predicate:r}of d)r(t)&&(e.set(n[0],n[1]),e.set(n[1],n[0]));return e.get.bind(e)})(t);return t=>{const n=e(t.country);return void 0===n?i:t=>t.country===n}};const g=([t])=>JSON.stringify({year:t}),v=o(t=>{const e=p(t),n=(t,n)=>{return 0===t.length||1===t.length&&(r=n,o=t[0],r.country!==o.country&&r.group!==o.group&&!e(r)(o));var r,o};return(t,e,r)=>n(e[r],t)},(t,e)=>g(t)===g(e));addEventListener("message",t=>{const{messageId:e,data:{season:n,pots:r,matchups:o}}=t.data,i=(([t,e],n,r)=>t.map((t,e)=>e).filter(o=>u(t[o],[t,e],n,r)))(r,o,v(n));postMessage({messageId:e,data:{possiblePairings:i}})})}]);