(self.webpackChunkdraw=self.webpackChunkdraw||[]).push([[425],{95062:t=>{t.exports=function(){return!1}},30845:(t,r,n)=>{"use strict";n.d(r,{Z:()=>o});var e=Number.isNaN||function(t){return"number"==typeof t&&t!=t};function s(t,r){if(t.length!==r.length)return!1;for(var n=0;n<t.length;n++)if(s=t[n],o=r[n],!(s===o||e(s)&&e(o)))return!1;var s,o;return!0}const o=function(t,r){var n;void 0===r&&(r=s);var e,o=[],i=!1;return function(){for(var s=[],a=0;a<arguments.length;a++)s[a]=arguments[a];return i&&n===this&&r(s,o)||(e=t.apply(this,s),i=!0,n=this,o=s),e}}},62311:(t,r,n)=>{"use strict";function e(t,[r,n],s,o){const i=s.findIndex((t=>1===t.length));if(!o(t,s,i))return!1;const a=[...s],u=a[i][0];a[i]=[u,t];return i+1===a.length||function([t,r],n,s){const o=n.findIndex((t=>!t.length)),[i,...a]=r,u=[...n];return u[o]=[i],t.some((r=>e(r,[t,a],u,s)))}([r.filter((r=>r!==t)),n],a,o)}n.d(r,{Z:()=>s});const s=([t,r],n,s)=>t.map(((t,r)=>r)).filter((o=>e(t[o],[t,r],n,s)))},60402:(t,r,n)=>{"use strict";n.d(r,{Z:()=>s});var e=n(76303);const s=t=>{const r=(0,e.Z)(t),n=(t,n)=>{return 0===t.length||1===t.length&&(e=n,s=t[0],e.country!==s.country&&e.group!==s.group&&!r(e)(s));var e,s};return(t,r,e)=>n(r[e],t)}},76303:(t,r,n)=>{"use strict";n.d(r,{Z:()=>d});var e=n(95062),s=n(97527);const o=[{countries:["Russia","Ukraine"],predicate:(i=2014,a=Number.MAX_SAFE_INTEGER,t=>t>=i&&t<=a)},{countries:["Azerbaijan","Armenia"]},{countries:["Serbia","Kosovo"]},{countries:["Bosnia & Herzegovina","Kosovo"]},{countries:["Spain","Gibraltar"]}];var i,a;const u={predicate:s},c=o.map((t=>({...u,...t}))),d=t=>{const r=(t=>{const r=new Map;for(const{countries:n,predicate:e}of c)e(t)&&(r.set(n[0],n[1]),r.set(n[1],n[0]));return r.get.bind(r)})(t);return t=>{const n=r(t.country);return void 0===n?e:t=>t.country===n}}},12061:(t,r,n)=>{"use strict";n.r(r);var e=n(30845),s=n(62311),o=n(60402);const i=([t])=>JSON.stringify({year:t}),a=(0,e.Z)(o.Z,((t,r)=>i(t)===i(r)));addEventListener("message",(t=>{const{messageId:r,data:{season:n,pots:e,matchups:o}}=t.data,i=a(n),u=(0,s.Z)(e,o,i);postMessage({messageId:r,data:{possiblePairings:u}})}))}}]);